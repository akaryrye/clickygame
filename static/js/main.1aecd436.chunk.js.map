{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/image/image.js","App.js","index.js"],"names":["Header","props","id","score","topScore","href","target","Footer","Image","name","src","img","onClick","alt","App","state","images","imagesJSON","resetGame","imgArr","map","clicked","length","alert","setState","updateScore","currentScore","console","log","handleImageClick","imageId","imageKey","tempImages","forEach","image","index","shuffleImages","this","i","j","Math","floor","random","className","key","Component","ReactDOM","render","document","getElementById"],"mappings":"uhCAsBeA,MAlBf,SAAgBC,GAEZ,OACI,yBAAKC,GAAG,UACJ,wBAAIA,GAAG,gBAAP,eACA,yBAAKA,GAAG,iBACJ,8CAAoBD,EAAME,OAC1B,0CAAgBF,EAAMG,WAE1B,yBAAKF,GAAG,gBACJ,uBAAGG,KAAK,yCAAyCC,OAAO,UAAxD,eACA,uBAAGD,KAAK,yBAAR,e,MCFDE,MAVf,WAEI,OACI,yBAAKL,GAAG,UACJ,2D,MCWGM,MAdf,SAAeP,GAEX,OACI,yBAAKC,GAAG,SACJ,uBAAGA,GAAG,gBAAgBD,EAAMQ,MAC5B,yBAAQC,IAAKT,EAAMU,IACXC,QAAS,kBAAMX,EAAMW,QAAQX,EAAMC,KACnCW,IAAKZ,EAAMQ,S,OC2FhBK,G,iNA7FbC,MAAQ,CACNC,OAAQC,EACRd,MAAO,EACPC,SAAU,G,EAiBZc,UAAY,WACV,IAAIC,EAAS,EAAKJ,MAAMC,OAExBG,EAAOC,KAAI,SAAAT,GAAG,OAAIA,EAAIU,SAAU,KAE5B,EAAKN,MAAMZ,QAAUgB,EAAOG,OAAUC,MAAM,6BACzCA,MAAM,wBAEb,EAAKC,SAAS,CAAER,OAAQG,EAAQhB,MAAO,K,EAGzCsB,YAAc,WACZ,IAAIC,EAAe,EAAKX,MAAMZ,MAAQ,EAGlCuB,EAFW,EAAKX,MAAMX,SAGxB,EAAKoB,SAAS,CAACpB,SAAUsB,EAAcvB,MAAOuB,IAC1C,EAAKF,SAAS,CAACrB,MAAOuB,IAE5BC,QAAQC,IAAI,UAAYF,GAEpBA,IAAiB,EAAKX,MAAMC,OAAOM,QACrC,EAAKJ,a,EAKTW,iBAAmB,SAAAC,GACjB,IACIC,EADAC,EAAa,EAAKjB,MAAMC,OAI5BgB,EAAWC,SAAS,SAACC,EAAOC,GACtBD,EAAMhC,KAAO4B,IAAUC,EAAWI,OAIH,IAAjCH,EAAWD,GAAUV,SACvBW,EAAWD,GAAUV,SAAU,EAC/B,EAAKI,eAEL,EAAKP,YAEPS,QAAQC,IAAI,UAAYG,GACxBJ,QAAQC,IAAI,eAAiBI,EAAWV,QAIxC,EAAKc,cAAcJ,I,mFA5DnBK,KAAKD,cAAcC,KAAKtB,MAAMC,U,oCAIlBG,GACZ,IAAK,IAAImB,EAAInB,EAAOG,OAAS,EAAGgB,EAAI,EAAGA,IAAK,CACxC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADF,EAEf,CAACnB,EAAOoB,GAAIpB,EAAOmB,IAA3CnB,EAAOmB,GAFgC,KAE5BnB,EAAOoB,GAFqB,KAI5CF,KAAKb,SAAS,CAACR,OAAQG,M,+BAuDf,IAAD,OACP,OACE,yBAAKwB,UAAU,OACb,kBAAC,EAAD,CAAQxC,MAAOkC,KAAKtB,MAAMZ,MAClBC,SAAUiC,KAAKtB,MAAMX,WAC7B,yBAAKF,GAAG,cACPmC,KAAKtB,MAAMC,OAAOI,KAAK,SAAAc,GAAK,OAC3B,kBAAC,EAAD,CAAQU,IAAKV,EAAMhC,GACXA,GAAIgC,EAAMhC,GACVO,KAAMyB,EAAMzB,KACZE,IAAKuB,EAAMvB,IACXC,QAAS,EAAKiB,uBAGxB,kBAAC,EAAD,W,GAxFUgB,cCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1aecd436.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\n\nfunction Header(props) {\n\n    return(\n        <div id='header'>\n            <h1 id='header-title'>Clicky Game</h1>\n            <div id='header-scores'>\n                <h3>Current Score: {props.score}</h3>\n                <h3>Top Score: {props.topScore}</h3>\n            </div>\n            <div id='header-links'>\n                <a href='https://github.com/akaryrye/clickygame' target=\"_blank\">Github Repo</a>\n                <a href='https://ralldrin.com/'>About Me</a>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Header;\n","import React from 'react';\nimport './footer.css';\n\nfunction Footer() {\n\n    return(\n        <div id=\"footer\">\n            <h3>&copy; 2019, Ryan K Alldrin</h3>\n        </div>\n    )\n\n}\n\nexport default Footer;","import React from 'react';\nimport './image.css';\n\n\nfunction Image(props) {\n\n    return(\n        <div id='image'>\n            <p id=\"image-header\">{props.name}</p>\n            <img    src={props.img}\n                    onClick={() => props.onClick(props.id)}\n                    alt={props.name}\n            />\n        </div>\n    )\n\n}\n\nexport default Image;\n","import React, {Component} from 'react';\nimport Header from './components/header/header'\nimport Footer from './components/footer/footer';\nimport Image from './components/image/image';\nimport imagesJSON from './images.json';\nimport './styles.css';\n\nclass App extends Component {\n  \n  state = {\n    images: imagesJSON,\n    score: 0,\n    topScore: 0\n  }\n\n  // shuffle images on page load\n  componentDidMount() {\n    this.shuffleImages(this.state.images);\n  }\n\n  // algorith for shuffling image array\n  shuffleImages(imgArr) {\n    for (let i = imgArr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [imgArr[i], imgArr[j]] = [imgArr[j], imgArr[i]];\n    }\n    this.setState({images: imgArr});\n  }\n\n  resetGame = () => {\n    let imgArr = this.state.images;\n    // set clicked to false on all\n    imgArr.map(img => img.clicked = false);\n    \n    if (this.state.score === imgArr.length) { alert(\"Great Job, You did it !!!\")} \n    else { alert(\"Ya done fucked it up\")}\n    \n    this.setState({ images: imgArr, score: 0 });\n  }\n\n  updateScore = () => {\n    let currentScore = this.state.score + 1;\n    let topScore = this.state.topScore;\n    \n    if (currentScore > topScore) {\n      this.setState({topScore: currentScore, score: currentScore})}\n    else {this.setState({score: currentScore})}\n    \n    console.log(\"score: \" + currentScore);\n\n    if (currentScore === this.state.images.length) {\n      this.resetGame()\n    } \n  }\n\n  // When an image is clicked, add its id to clicked array\n  handleImageClick = imageId => {\n    let tempImages = this.state.images;\n    let imageKey;\n\n    // find index of selected image by id\n    tempImages.forEach( (image, index) => {\n      if (image.id === imageId) {imageKey = index}\n    });\n\n    // if image had already been clicked or not:\n    if (tempImages[imageKey].clicked === false) {\n      tempImages[imageKey].clicked = true;\n      this.updateScore();\n    } else {\n      this.resetGame();\n    }\n    console.log(\"Index: \" + imageKey);\n    console.log(\"arr length: \" + tempImages.length);\n    \n    /* if (this.state.score === tempImages.length) {\n      this.resetGame(); */\n    this.shuffleImages(tempImages);\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header score={this.state.score}\n                topScore={this.state.topScore} />\n        <div id=\"game-board\">\n        {this.state.images.map( image => (\n          <Image  key={image.id}\n                  id={image.id}\n                  name={image.name}\n                  img={image.img}\n                  onClick={this.handleImageClick} />\n        ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;  //\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}